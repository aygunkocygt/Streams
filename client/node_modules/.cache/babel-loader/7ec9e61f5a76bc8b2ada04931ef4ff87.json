{"ast":null,"code":"import _classCallCheck from \"C:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\projeler\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport './style.css';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card text-white bg-info mb-3 size\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, stream.title), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, stream.description))), React.createElement(\"div\", {\n          class: \"jumbotron\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          class: \"display-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Hello, world!\"), React.createElement(\"p\", {\n          class: \"lead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Streams\")), this.renderList());\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:\\projeler\\streams\\client\\src\\components\\streams\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","streams","map","stream","id","title","description","renderList","Component","mapStateToProps","state","Object","values"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAQ,aAAR;;IAEMC,U;;;;;;;;;;;;;wCAEiB;AACf,WAAKC,KAAL,CAAWF,YAAX;AACH;;;iCAIW;AACR,aAAO,KAAKE,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AACpC,eACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAoD,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BD,MAAM,CAACE,KAArC,CADA,EAEA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BF,MAAM,CAACG,WAAjC,CADF,CAFA,CADA,EAOF;AAAK,UAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAI,UAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,EAEA;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CAPE,CADJ;AAcH,OAfM,CAAP;AAgBH;;;6BAEO;AACF,aACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CADA,EAKC,KAAKC,UAAL,EALD,CADA;AAUL;;;;EAtCoBX,KAAK,CAACY,S;;AA0C/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHT,IAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB;AADN,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAClBY,eADkB,EAElB;AAAEX,EAAAA,YAAY,EAAZA;AAAF,CAFkB,CAAP,CAGTC,UAHS,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { fetchStreams } from '../../actions'\r\nimport  './style.css';\r\n\r\nclass StreamList extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchStreams()\r\n    }\r\n\r\n   \r\n\r\n    renderList(){\r\n        return this.props.streams.map(stream => {\r\n            return(\r\n                <div className=\"row\">\r\n                <div className=\"card text-white bg-info mb-3 size\"  key={stream.id}>\r\n                <div className=\"card-header\">{stream.title}</div>\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">{stream.description}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"jumbotron\">\r\n              <h1 class=\"display-3\">Hello, world!</h1>\r\n              <p class=\"lead\"></p>\r\n              </div>\r\n              </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render(){\r\n          return  (\r\n          <div className=\"container\">\r\n          <div className=\"row\">\r\n          <h2>Streams</h2>\r\n          </div>  \r\n          \r\n          {this.renderList()}\r\n         \r\n  </div>\r\n  );        \r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        streams: Object.values(state.streams)\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStreams }\r\n    )(StreamList);"]},"metadata":{},"sourceType":"module"}