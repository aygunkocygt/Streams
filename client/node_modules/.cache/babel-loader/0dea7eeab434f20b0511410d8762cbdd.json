{"ast":null,"code":"import _classCallCheck from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\projeler\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport './style.css';\nimport { Link } from 'react-router-dom';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          style: {\n            marginLeft: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"breadcrumb-item active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/edit/\".concat(stream.id),\n          style: {\n            marginRight: 5\n          },\n          type: \"button\",\n          className: \"btn btn-outline-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Delete\")));\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"ol\", {\n          className: \"breadcrumb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"breadcrumb-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, stream.title, \" /\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"breadcrumb-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"mb-0\",\n          style: {\n            paddingLeft: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, stream.description, ' '))), _this.renderAdmin(stream)));\n      });\n    }\n  }, {\n    key: \"renderCreate\",\n    value: function renderCreate() {\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/new\",\n          className: \"btn btn-outline-secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Create Stream\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Streams\")), this.renderList(), this.renderCreate());\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["c:\\projeler\\streams\\client\\src\\components\\streams\\StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","props","stream","userId","currentUserId","marginLeft","id","marginRight","streams","map","title","paddingLeft","description","renderAdmin","isSignedIn","renderList","renderCreate","Component","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass StreamList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStreams();\r\n  }\r\n\r\n  renderAdmin(stream) {\r\n    if (stream.userId === this.props.currentUserId) {\r\n      return (\r\n        <div style={{ marginLeft: 30 }}>\r\n          <li className='breadcrumb-item active'>\r\n            <Link\r\n              to={`/streams/edit/${stream.id}`}\r\n              style={{ marginRight: 5 }}\r\n              type='button'\r\n              className='btn btn-outline-info'\r\n            >\r\n              Edit\r\n            </Link>\r\n            <button type='button' className='btn btn-outline-danger'>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.streams.map(stream => {\r\n      return (\r\n        <div className='row' key={stream.id}>\r\n          <ol className='breadcrumb'>\r\n            <li className='breadcrumb-item'>\r\n              <h4>{stream.title} /</h4>\r\n            </li>\r\n            <br />\r\n\r\n            <div>\r\n              <li className='breadcrumb-item'>\r\n                <br />\r\n                <p className='mb-0' style={{ paddingLeft: 0 }}>\r\n                  {stream.description}{' '}\r\n                </p>\r\n              </li>\r\n            </div>\r\n\r\n            {this.renderAdmin(stream)}\r\n          </ol>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderCreate() {\r\n    if (this.props.isSignedIn) {\r\n      return (\r\n        <div className='row'>\r\n          <Link to='/streams/new' className='btn btn-outline-secondary'>\r\n            Create Stream\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <h1>Streams</h1>\r\n        </div>\r\n        {this.renderList()}\r\n        {this.renderCreate()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    streams: Object.values(state.streams),\r\n    currentUserId: state.auth.userId,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchStreams }\r\n)(StreamList);\r\n"]},"metadata":{},"sourceType":"module"}