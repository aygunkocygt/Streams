{"ast":null,"code":"import _regeneratorRuntime from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"c:\\\\projeler\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return streams.post('/streams', _objectSpread({}, formValues, {\n                  userId: userId\n                }));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n                history.push('/');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStreams = function fetchStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get('/streams');\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_STREAMS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStream = function fetchStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get(\"/streams/\".concat(id));\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: FETCH_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editStream = function editStream(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return streams.patch(\"/streams/\".concat(id), formValues);\n\n              case 2:\n                response = _context4.sent;\n                //put componentide gÃ¼ncelliyor ama patch sadece ordaki title descrption yani propertyi\n                dispatch({\n                  type: EDIT_STREAM,\n                  payload: response.data\n                });\n                history.push('/');\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteStream = function deleteStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return streams.delete(\"/streams/\".concat(id));\n\n              case 2:\n                dispatch({\n                  type: DELETE_STREAM,\n                  payload: id\n                });\n                history.push('/');\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["c:\\projeler\\streams\\client\\src\\actions\\index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","post","response","data","push","fetchStreams","get","fetchStream","id","editStream","patch","deleteStream","delete"],"mappings":"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","sourcesContent":["import { \r\n    SIGN_IN, \r\n    SIGN_OUT, \r\n    CREATE_STREAM, \r\n    FETCH_STREAMS, \r\n    FETCH_STREAM, \r\n    DELETE_STREAM, \r\n    EDIT_STREAM } from './types'\r\nimport streams from '../apis/streams';\r\nimport history from '../history';\r\n\r\nexport const signIn = userId => {\r\n    return{\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const createStream = formValues => async (dispatch,getState) => {\r\n    const { userId } = getState().auth;\r\n    const response = await streams.post('/streams',{ ...formValues, userId })\r\n\r\n    dispatch({ type: CREATE_STREAM, payload: response.data})\r\n    history.push('/');\r\n\r\n}\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams')\r\n\r\n    dispatch({ type: FETCH_STREAMS, payload: response.data })\r\n}\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${id}`)\r\n\r\n    dispatch({ type: FETCH_STREAM, payload: response.data })\r\n}\r\n\r\nexport const editStream = (id,formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams/${id}`, formValues)\r\n    //put componentide gÃ¼ncelliyor ama patch sadece ordaki title descrption yani propertyi\r\n\r\n    dispatch({ type: EDIT_STREAM, payload: response.data });\r\n    history.push('/');\r\n\r\n}\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n    await streams.delete(`/streams/${id}`)\r\n\r\n    dispatch({ type: DELETE_STREAM, payload: id })\r\n    history.push('/');\r\n}"]},"metadata":{},"sourceType":"module"}